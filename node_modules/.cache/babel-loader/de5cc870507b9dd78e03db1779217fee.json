{"ast":null,"code":"var _jsxFileName = \"/Users/aaronchongkh/ReactProjects/hotel-test2/src/pages/Lmao.tsx\";\nimport React from 'react';\nimport Webcam from 'react-webcam';\nexport default class Lmao extends React.Component {\n  constructor(props) {\n    super(props);\n    this.webcamRef = void 0;\n\n    this.handleClick = () => {\n      var lmao = this.webcamRef.current.getScreenshot();\n      this.setState({\n        previewImg: lmao\n      });\n    };\n\n    this.handleClick = this.handleClick.bind(this);\n    this.webcamRef = React.createRef();\n    this.state = {\n      startDate: new Date(),\n      endDate: new Date(),\n      roomType: \"\",\n      success: false,\n      url: \"\",\n      photoInput: false,\n      test: \"\",\n      previewImg: null,\n      tries: 0\n    };\n  }\n\n  render() {\n    console.log(this.state);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, \"lkjsfdlkj\"), React.createElement(Webcam, {\n      height: 360,\n      width: 1280,\n      screenshotFormat: \"image/jpeg\",\n      audio: false,\n      ref: this.webcamRef,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: this.handleClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, \"Capture pic\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: this.state.previewImg,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    })));\n  }\n\n}","map":{"version":3,"sources":["/Users/aaronchongkh/ReactProjects/hotel-test2/src/pages/Lmao.tsx"],"names":["React","Webcam","Lmao","Component","constructor","props","webcamRef","handleClick","lmao","current","getScreenshot","setState","previewImg","bind","createRef","state","startDate","Date","endDate","roomType","success","url","photoInput","test","tries","render","console","log"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAoC,cAApC;AAcA,eAAe,MAAMC,IAAN,SAAmBF,KAAK,CAACG,SAAzB,CAA+C;AAE1DC,EAAAA,WAAW,CAACC,KAAD,EAAY;AACnB,UAAMA,KAAN;AADmB,SADfC,SACe;;AAAA,SAiBvBC,WAjBuB,GAiBT,MAAM;AAChB,UAAIC,IAAI,GAAG,KAAKF,SAAL,CAAeG,OAAf,CAAuBC,aAAvB,EAAX;AACA,WAAKC,QAAL,CAAc;AACVC,QAAAA,UAAU,EAAEJ;AADF,OAAd;AAGD,KAtBoB;;AAEnB,SAAKD,WAAL,GAAmB,KAAKA,WAAL,CAAiBM,IAAjB,CAAsB,IAAtB,CAAnB;AACA,SAAKP,SAAL,GAAiBN,KAAK,CAACc,SAAN,EAAjB;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,SAAS,EAAE,IAAIC,IAAJ,EADF;AAETC,MAAAA,OAAO,EAAE,IAAID,IAAJ,EAFA;AAGTE,MAAAA,QAAQ,EAAE,EAHD;AAITC,MAAAA,OAAO,EAAE,KAJA;AAKTC,MAAAA,GAAG,EAAE,EALI;AAMTC,MAAAA,UAAU,EAAE,KANH;AAOTC,MAAAA,IAAI,EAAE,EAPG;AAQTX,MAAAA,UAAU,EAAE,IARH;AASTY,MAAAA,KAAK,EAAE;AATE,KAAb;AAWH;;AASMC,EAAAA,MAAP,GAA6B;AACzBC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKZ,KAAjB;AACA,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADG,EAEH,oBAAC,MAAD;AACA,MAAA,MAAM,EAAE,GADR;AAEA,MAAA,KAAK,EAAE,IAFP;AAGA,MAAA,gBAAgB,EAAC,YAHjB;AAIA,MAAA,KAAK,EAAE,KAJP;AAKA,MAAA,GAAG,EAAE,KAAKT,SALV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFG,EASH;AAAQ,MAAA,OAAO,EAAE,KAAKC,WAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBATG,EAUH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAK,MAAA,GAAG,EAAE,KAAKQ,KAAL,CAAWH,UAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,CAVG,CAAP;AAcH;;AA1CyD","sourcesContent":["import React from 'react';\nimport Webcam, { WebcamProps } from 'react-webcam';\n\ninterface IState {\n    startDate: Date;\n    endDate: Date;\n    roomType: string;\n    previewImg?: any;\n    success: boolean; \n    url: string;\n    photoInput: boolean;\n    test: string;\n    tries: number;\n}\n\nexport default class Lmao extends React.Component<{}, IState> {\n    private webcamRef: React.RefObject<Webcam> & React.RefObject<HTMLVideoElement>;\n    constructor(props: {}) {\n        super(props);\n        this.handleClick = this.handleClick.bind(this);\n        this.webcamRef = React.createRef();\n        this.state = {\n            startDate: new Date(),\n            endDate: new Date(),\n            roomType: \"\", \n            success: false, \n            url: \"\", \n            photoInput: false,\n            test: \"\", \n            previewImg: null,\n            tries: 0\n        }\n    }\n\n    handleClick = () => {\n        var lmao = this.webcamRef.current.getScreenshot();\n        this.setState({ \n            previewImg: lmao\n         });\n      }\n\n    public render(): JSX.Element {\n        console.log(this.state)\n        return <div>\n            <h1>lkjsfdlkj</h1>\n            <Webcam\n            height={360}\n            width={1280}\n            screenshotFormat=\"image/jpeg\"\n            audio={false}\n            ref={this.webcamRef}\n            />\n            <button onClick={this.handleClick}>Capture pic</button>\n            <div>\n            <img src={this.state.previewImg} />\n            </div>\n        </div>\n    }\n}"]},"metadata":{},"sourceType":"module"}