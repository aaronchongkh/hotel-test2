{"ast":null,"code":"import _objectSpread from \"/Users/aaronchongkh/ReactProjects/hotel-test2/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/aaronchongkh/ReactProjects/hotel-test2/src/store/context.tsx\";\nimport React, { Component } from 'react';\nimport items from './data';\nconst RoomContext = React.createContext(null);\n\nclass RoomProvider extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      rooms: [],\n      sortedRooms: [],\n      featuredRooms: [],\n      loading: true,\n      type: \"all\",\n      capacity: 1,\n      price: 0,\n      minPrice: 0,\n      maxPrice: 0,\n      minSize: 0,\n      maxSize: 0,\n      breakfast: false,\n      pets: false // Get Data when component mount\n\n    };\n\n    this.formatData = items => {\n      const tempItems = items.map(item => {\n        let id = item.sys.id;\n        let images = item.fields.images.map(image => image.fields.file.url);\n\n        const room = _objectSpread({}, item.fields, {\n          images,\n          id // Reformating the array\n\n        });\n\n        return room;\n      });\n      return tempItems;\n    };\n\n    this.getRoom = slug => {\n      const tempRooms = [...this.state.rooms];\n      const room = tempRooms.find(room => room.slug === slug);\n      return room;\n    };\n\n    this.handleChange = event => {\n      const value = event.target.value;\n      const name = event.target.name;\n      const obj = {};\n      obj[name] = value;\n      this.setState(obj, this.filterRooms);\n    };\n\n    this.handleChecked = event => {\n      console.log(\"pets\", this.state.pets);\n      console.log(\"breakfast\", this.state.breakfast);\n      const value = event.target.checked;\n      const name = event.target.name;\n      const obj = {};\n      obj[name] = value;\n      console.log(obj);\n      this.setState(obj, this.filterRooms);\n    };\n\n    this.filterRooms = () => {\n      let _this$state = this.state,\n          rooms = _this$state.rooms,\n          type = _this$state.type,\n          capacity = _this$state.capacity,\n          price = _this$state.price,\n          minSize = _this$state.minSize,\n          maxSize = _this$state.maxSize,\n          breakfast = _this$state.breakfast,\n          pets = _this$state.pets; // all the rooms\n\n      let tempRooms = [...rooms]; // transform value\n\n      capacity = Number(capacity);\n      price = Number(price); // filter by type\n\n      if (type !== 'all') {\n        tempRooms = tempRooms.filter(room => room.type === type);\n      } // filter by capacity\n\n\n      if (capacity !== 1) {\n        tempRooms = tempRooms.filter(room => room.capacity >= capacity);\n      } // filter by price\n\n\n      tempRooms = tempRooms.filter(room => room.price <= price); // filter by size\n\n      tempRooms = tempRooms.filter(room => room.size >= minSize && room.size <= maxSize); // filter by breakfast\n\n      if (breakfast) {\n        tempRooms = tempRooms.filter(room => room.breakfast === true);\n      } // filter by pets\n\n\n      if (pets) {\n        tempRooms = tempRooms.filter(room => room.pets === true);\n      } // change state\n\n\n      this.setState({\n        sortedRooms: tempRooms\n      });\n    };\n  }\n\n  componentDidMount() {\n    let rooms = this.formatData(items);\n    let featuredRooms = rooms.filter(room => room.featured === true);\n    let maxPrice = Math.max(...rooms.map(item => item.price));\n    let maxSize = Math.max(...rooms.map(item => item.size));\n    this.setState({\n      rooms,\n      featuredRooms,\n      sortedRooms: rooms,\n      loading: false,\n      price: maxPrice,\n      maxPrice,\n      maxSize\n    });\n  }\n\n  render() {\n    return React.createElement(RoomContext.Provider, {\n      value: _objectSpread({}, this.state, {\n        getRoom: this.getRoom,\n        handleChange: this.handleChange,\n        handleChecked: this.handleChecked\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, this.props.children);\n  }\n\n}\n\nconst RoomConsumer = RoomContext.Consumer;\n// For Using Context with Functional Component (Stateless) with HOC\nexport const withRoomConsumer = Component => props => {\n  return React.createElement(RoomConsumer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }, value => React.createElement(Component, Object.assign({}, props, {\n    context: value,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  })));\n}; // Exporting all contexts\n\nexport { RoomProvider, RoomConsumer, RoomContext };","map":{"version":3,"sources":["/Users/aaronchongkh/ReactProjects/hotel-test2/src/store/context.tsx"],"names":["React","Component","items","RoomContext","createContext","RoomProvider","state","rooms","sortedRooms","featuredRooms","loading","type","capacity","price","minPrice","maxPrice","minSize","maxSize","breakfast","pets","formatData","tempItems","map","item","id","sys","images","fields","image","file","url","room","getRoom","slug","tempRooms","find","handleChange","event","value","target","name","obj","setState","filterRooms","handleChecked","console","log","checked","Number","filter","size","componentDidMount","featured","Math","max","render","props","children","RoomConsumer","Consumer","withRoomConsumer"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { IStateContext, RoomsObject } from '../models/models';\nimport items from './data';\n\nconst RoomContext = React.createContext<RoomsObject | null>(null);\n\nclass RoomProvider extends Component<{}, IStateContext> {\n\n    public readonly state: Readonly<IStateContext> = {\n        rooms: [],\n        sortedRooms: [],\n        featuredRooms: [],\n        loading: true,\n        type: \"all\",\n        capacity: 1,\n        price: 0,\n        minPrice: 0,\n        maxPrice: 0,\n        minSize: 0,\n        maxSize: 0,\n        breakfast: false,\n        pets: false\n    }\n\n    // Get Data when component mount\n    public componentDidMount() {\n        let rooms = this.formatData(items);\n        let featuredRooms = rooms.filter((room: any) => room.featured === true);\n        let maxPrice = Math.max(...rooms.map((item: any) => item.price));\n        let maxSize = Math.max(...rooms.map((item: any) => item.size));\n\n        this.setState({\n            rooms,\n            featuredRooms,\n            sortedRooms: rooms,\n            loading: false,\n            price: maxPrice,\n            maxPrice,\n            maxSize\n        })\n\n    }\n\n    public render() {\n        return (\n            <RoomContext.Provider value={{...this.state, getRoom: this.getRoom, handleChange: this.handleChange, handleChecked: this.handleChecked}}>\n                {this.props.children}\n            </RoomContext.Provider>\n        )\n    }\n\n    private formatData = (items: any) => {\n        const tempItems = items.map((item: any) => {\n            let id = item.sys.id\n            let images = item.fields.images.map((image: any) => image.fields.file.url)\n            const room = {...item.fields, images, id} // Reformating the array\n            return room;\n        })\n\n        return tempItems;\n    }\n\n    private getRoom = (slug: string) => {\n        const tempRooms = [...this.state.rooms];\n        const room = tempRooms.find((room: any) => room.slug === slug);\n        return room;\n    }\n\n    private handleChange = (event: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>) => {\n        const value = event.target.value;\n        const name = event.target.name;\n\n        const obj: any = {};\n        obj[name] = value;\n\n        this.setState(obj, this.filterRooms);\n    }\n\n    private handleChecked = (event: any) => {\n        console.log(\"pets\", this.state.pets);\n        console.log(\"breakfast\", this.state.breakfast);\n        const value = event.target.checked;\n        const name = event.target.name;\n\n        const obj: any = {};\n        obj[name] = value;\n        console.log(obj);\n\n        this.setState(obj, this.filterRooms);\n    }\n\n    private filterRooms = () => {\n        let { rooms, type, capacity, price, minSize, maxSize, breakfast, pets } = this.state;\n        // all the rooms\n        let tempRooms = [...rooms];\n        // transform value\n        capacity = Number(capacity);\n        price = Number(price);\n\n        // filter by type\n        if (type !== 'all') {\n            tempRooms = tempRooms.filter(room => room.type === type)\n        }\n\n        // filter by capacity\n        if (capacity !== 1) {\n            tempRooms = tempRooms.filter(room => room.capacity >= capacity)\n        }\n\n        // filter by price\n        tempRooms = tempRooms.filter(room => room.price <= price)\n\n        // filter by size\n        tempRooms = tempRooms.filter(room => room.size >= minSize && room.size <= maxSize);\n\n        // filter by breakfast\n        if (breakfast) {\n            tempRooms = tempRooms.filter(room => room.breakfast === true);\n        }\n\n        // filter by pets\n        if (pets) {\n            tempRooms = tempRooms.filter(room => room.pets === true);\n        }\n\n        // change state\n        this.setState({\n            sortedRooms: tempRooms\n        })\n    }\n}\n\nconst RoomConsumer = RoomContext.Consumer;\n\ntype Omit<T, K extends keyof T> = Pick<T, Exclude<keyof T, K>>;\n\n// For Using Context with Functional Component (Stateless) with HOC\nexport const withRoomConsumer = <P extends {}>(Component: React.ComponentClass<P> | React.StatelessComponent<P>): React.FC<any> => props => {\n    return <RoomConsumer>\n            { value => <Component {...props} context={value} />}\n        </RoomConsumer>;\n};\n\n// Exporting all contexts\nexport {RoomProvider, RoomConsumer, RoomContext};\n\n"]},"metadata":{},"sourceType":"module"}