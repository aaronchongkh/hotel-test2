{"ast":null,"code":"var _jsxFileName = \"/Users/aaronchongkh/ReactProjects/hotel-test2/src/containers/RoomsContainer.tsx\";\nimport React from 'react';\nimport RoomsList from '../components/RoomsList';\nimport { withRoomConsumer } from '../store/context';\nimport Loading from '../components/Loading';\n\n// Use Context in functional component with HOC\nconst RoomsContainer = ({\n  context\n}) => {\n  const loading = context.loading,\n        rooms = context.rooms,\n        sortedRooms = context.sortedRooms;\n  console.log(\"context\", context);\n\n  if (loading) {\n    return React.createElement(Loading, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    });\n  }\n\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(RoomsList, {\n    rooms: sortedRooms,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }));\n};\n\nexport default withRoomConsumer(RoomsContainer); // // Use Context in functional component without HOC (Normal)\n// import { RoomConsumer } from '../store/context';\n// const RoomsContainer: React.FC = () => {\n// return (\n// <RoomConsumer>\n//     {(value: IRoomContext | null) => {\n//     if (value) {\n//         const {loading, rooms, sortedRooms} = value;\n//         if (loading) {\n//             return <Loading />\n//         }\n//         return (\n//             <div>\n//                 Hello from rooms cont\n//                 <RoomsFilter rooms={rooms} />\n//                 <RoomsList rooms={sortedRooms}/> \n//             </div>\n//         );\n//     } else {\n//         return <Loading />\n//     }\n// }}\n// </RoomConsumer>\n// )\n// }\n// export default RoomsContainer;","map":{"version":3,"sources":["/Users/aaronchongkh/ReactProjects/hotel-test2/src/containers/RoomsContainer.tsx"],"names":["React","RoomsList","withRoomConsumer","Loading","RoomsContainer","context","loading","rooms","sortedRooms","console","log"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,SAASC,gBAAT,QAAiC,kBAAjC;AACA,OAAOC,OAAP,MAAoB,uBAApB;;AAOA;AACA,MAAMC,cAA8C,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAe;AAAA,QAE3DC,OAF2D,GAE5BD,OAF4B,CAE3DC,OAF2D;AAAA,QAElDC,KAFkD,GAE5BF,OAF4B,CAElDE,KAFkD;AAAA,QAE3CC,WAF2C,GAE5BH,OAF4B,CAE3CG,WAF2C;AAGlEC,EAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBL,OAAvB;;AAEA,MAAIC,OAAJ,EAAa;AACT,WAAO,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACH;;AACD,SACI,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAEE,WAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ;AAKH,CAbD;;AAeA,eAAeN,gBAAgB,CAACE,cAAD,CAA/B,C,CAGA;AAEA;AAEA;AAGA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["import React from 'react';\nimport RoomsFilter from '../components/RoomsFilter';\nimport RoomsList from '../components/RoomsList';\nimport { withRoomConsumer } from '../store/context';\nimport Loading from '../components/Loading';\nimport { RoomsObject } from '../models/models';\n\ninterface IPropsRoomsContainer {\n    context: RoomsObject\n}\n\n// Use Context in functional component with HOC\nconst RoomsContainer: React.FC<IPropsRoomsContainer> = ({context}) => {\n\n    const {loading, rooms, sortedRooms} = context;\n    console.log(\"context\", context);\n\n    if (loading) {\n        return <Loading />\n    }\n    return (\n        <React.Fragment>\n            <RoomsList rooms={sortedRooms}/> \n        </React.Fragment>\n    );\n}\n\nexport default withRoomConsumer(RoomsContainer);\n\n\n// // Use Context in functional component without HOC (Normal)\n\n// import { RoomConsumer } from '../store/context';\n\n// const RoomsContainer: React.FC = () => {\n\n\n// return (\n// <RoomConsumer>\n//     {(value: IRoomContext | null) => {\n//     if (value) {\n//         const {loading, rooms, sortedRooms} = value;\n\n//         if (loading) {\n//             return <Loading />\n//         }\n//         return (\n//             <div>\n//                 Hello from rooms cont\n//                 <RoomsFilter rooms={rooms} />\n//                 <RoomsList rooms={sortedRooms}/> \n//             </div>\n//         );\n//     } else {\n//         return <Loading />\n//     }\n// }}\n// </RoomConsumer>\n// )\n// }\n\n// export default RoomsContainer;\n"]},"metadata":{},"sourceType":"module"}