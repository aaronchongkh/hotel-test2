{"ast":null,"code":"var _jsxFileName = \"/Users/aaronchongkh/ReactProjects/hotel-test2/src/components/BookingForm.tsx\";\nimport React from 'react';\nimport { Redirect } from 'react-router';\nimport AWS from 'aws-sdk';\nimport Webcam from 'react-webcam'; // const AWS = require('aws-sdk');\n\nconst S3 = require('react-aws-s3');\n\nconst config = {\n  bucketName: 'facerecogdata2',\n  //dirName: 'media', /* optional */\n  region: 'us-east-2',\n  accessKeyId: 'AKIA2FBSYGBOR6A3TQGL',\n  secretAccessKey: 'myA5ldaLfSkcCwYKF6DiG4q5nG4lMkXmJCoyRKSp' // s3Url: 'https:/your-custom-s3-url.com/', /* optional */\n  // AWS.config = new AWS.config();\n  // AWS.config.accessKeyId = config.accessKeyId; \n  // AWS.config.secretAccessKey = config.secretAccessKey;\n  // AWS.config.region = config.region\n\n};\nAWS.config.update({\n  accessKeyId: 'AKIA2FBSYGBOR6A3TQGL',\n  secretAccessKey: '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',\n  region: 'us-east-2'\n});\nvar s3Bucket = new AWS.S3({\n  params: {\n    Bucket: 'facerecogdata2'\n  }\n});\nconst dynamoDb = new AWS.DynamoDB.DocumentClient({\n  accessKeyId: config.accessKeyId,\n  secretAccessKey: config.secretAccessKey,\n  region: config.region\n}); // dynamo.AWS.config.update({accessKeyId: config.accessKeyId, secretAccessKey: config.secretAccessKey, region: config.region});\n\nconst S3FileUpload = new S3(config); // const ddb = new AWS.DynamoDB({apiVersion: '2012-08-10'});\n\nexport class BookingForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.webcamRef = void 0;\n\n    this.handleCapture = e => {\n      e.preventDefault();\n      console.log(\"capture\");\n      var tempPhoto = this.webcamRef.current.getScreenshot();\n      this.setState({\n        previewImg: tempPhoto\n      });\n    };\n\n    this.handlePhotoUpload2 = e => {\n      e.preventDefault();\n      console.log(\"upload2\");\n      AWS.config.update({\n        accessKeyId: 'AKIA2FBSYGBOR6A3TQGL',\n        secretAccessKey: 'myA5ldaLfSkcCwYKF6DiG4q5nG4lMkXmJCoyRKSp',\n        region: 'us-east-2'\n      });\n      const buffer = Buffer.from(this.state.previewImg.replace(/^data:image\\/\\w+;base64,/, \"\"), 'base64');\n      console.log(buffer);\n      var fnameString = this.state.fname;\n      var lnameString = this.state.lname;\n      var cusFullName = fnameString + \"_\" + lnameString;\n      var data = {\n        Key: cusFullName + \".jpeg\",\n        Body: buffer,\n        ContentEncoding: 'base64',\n        ContentType: 'image/jpeg',\n        Bucket: 'facerecogdata2'\n      };\n      s3Bucket.putObject(data, function (err, data) {\n        if (err) {\n          console.log(err);\n          console.log('Error uploading data: ', data);\n        } else {\n          console.log('succesfully uploaded the image!');\n        }\n      });\n    };\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleCapture = this.handleCapture.bind(this);\n    this.handlePhotoUpload = this.handlePhotoUpload.bind(this);\n    this.webcamRef = React.createRef();\n    this.state = {\n      startDate: new Date(),\n      endDate: new Date(),\n      noOfPeople: 1,\n      roomType: \"\",\n      fname: \"\",\n      lname: \"\",\n      email: \"\",\n      phoneno: \"\",\n      previewImg: null,\n      photoInput: false,\n      bookingRedirect: false\n    };\n  }\n\n  componentDidMount() {\n    console.log(\"JHASJDKSAJDLK\");\n    setTimeout(() => {\n      // const { startDate, endDate, noOfPeople, roomType } = this.props.location.state;\n      // console.log(startDate);\n      // console.log(endDate);\n      // console.log(noOfPeople);\n      // console.log(roomType);\n      this.setState({\n        startDate: this.props.startDate,\n        endDate: this.props.endDate,\n        noOfPeople: this.props.noOfPeople,\n        roomType: this.props.roomType,\n        fname: this.props.fname,\n        lname: this.props.lname,\n        email: this.props.email,\n        phoneno: this.props.phoneno\n      });\n      console.log(this.state.noOfPeople);\n      console.log(this.state.roomType);\n      console.log(this.state.startDate);\n      console.log(this.state.endDate);\n    }, 1000);\n  }\n\n  photoSelection() {\n    let numOfSel = [];\n\n    for (let i = 1; i <= this.props.noOfPeople; i++) {\n      numOfSel.push(React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, \"Person number \", i, \":\", React.createElement(\"input\", {\n        type: \"file\",\n        name: \"file\",\n        onChange: this.handlePhotoUpload,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      })));\n    }\n\n    return numOfSel;\n  }\n\n  renderPhotoSelection() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, this.photoSelection());\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    this.setState({\n      fname: this.refs.fname.value,\n      lname: this.refs.lname.value,\n      email: this.refs.email.value,\n      phoneno: this.refs.phoneno.value\n    });\n    console.log(this.state.fname);\n    var fnameString = this.state.fname;\n    var lnameString = this.state.lname;\n    var cusFullName = fnameString + \"_\" + lnameString;\n    var endDateString = this.state.endDate.toDateString().split(' ').slice(1).join(' ');\n    var startDateString = this.state.startDate.toDateString().split(' ').slice(1).join(' ');\n    var emailString = this.state.email;\n    var phonenoString = this.state.phoneno;\n    var roomTypeString = this.state.roomType;\n    var noOfPeopleString = this.state.noOfPeople;\n    console.log(this.state);\n    console.log(cusFullName);\n    var defaultRoomNumber = 0;\n    var params = {\n      TableName: 'HotelCustomer',\n      Item: {\n        // 'fName': {\"S\": this.state.fname}, \n        // 'lName': {\"S\": this.state.lname}, \n        // 'startDate': {\"S\": this.state.startDate.toISOString()}, \n        // 'endDate': {\"S\": this.state.endDate.toISOString()}, \n        // 'roomType': {\"S\": this.state.roomType}, \n        // 'fullName': {\"S\": cusFullName}, \n        // 'email': {\"S\": this.state.email}, \n        // 'phoneno': {\"S\": this.state.phoneno},\n        // 'noOfPeople': {\"S\": this.state.noOfPeople}\n        fName: fnameString,\n        lName: lnameString,\n        email: emailString,\n        endDate: endDateString,\n        fullName: cusFullName,\n        phoneno: phonenoString,\n        roomType: roomTypeString,\n        startDate: startDateString,\n        noOfPeople: noOfPeopleString,\n        roomNumber: defaultRoomNumber.toString()\n      }\n    };\n    dynamoDb.put(params, (err, data) => {\n      if (err) {\n        console.log(\"Error\", err);\n        window.alert(\"Can't upload data, please try again. \");\n      } else {\n        console.log(\"Success\", data);\n        this.setState({\n          bookingRedirect: true\n        });\n      }\n    }); // setTimeout(() => {\n    //     //bac\n    // }, 300)\n  }\n\n  handleFirstName(e) {\n    this.setState({\n      fname: e\n    });\n  }\n\n  handleLastName(e) {\n    this.setState({\n      lname: e\n    });\n  }\n\n  handleEmail(e) {\n    this.setState({\n      email: e\n    });\n  }\n\n  handlePhone(e) {\n    this.setState({\n      phoneno: e\n    });\n  }\n\n  handlePhotoUpload(e) {\n    var fnameString = this.state.fname;\n    var lnameString = this.state.lname;\n    var fullName = fnameString + \"_\" + lnameString;\n    let file = e.target.files[0];\n    let reader = new FileReader();\n\n    if (e.target.files.length === 0) {\n      return;\n    }\n\n    console.log(e.target.files[0]);\n\n    reader.onloadend = e => {\n      this.setState({\n        previewImg: [reader.result]\n      });\n    };\n\n    const file_name = fullName;\n    S3FileUpload.uploadFile(e.target.files[0], file_name).then(data => console.log(data), window.alert(\"Uploaded\")).catch(err => console.error(err));\n    const abc = reader.readAsDataURL(file);\n    this.setState({\n      photoInput: true\n    });\n  }\n\n  render() {\n    const bookingRedirect = this.state.bookingRedirect;\n    console.log(this.state);\n\n    if (bookingRedirect) {\n      return React.createElement(Redirect, {\n        to: \"/bookingcomplete\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 277\n        },\n        __self: this\n      });\n    } else {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 280\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"banner\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 281\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 282\n        },\n        __self: this\n      }, \"Room details: \"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 283\n        },\n        __self: this\n      }, \"Room type selected: \", this.props.roomType), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 284\n        },\n        __self: this\n      }, \"Start date: \", this.props.startDate.toDateString()), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 285\n        },\n        __self: this\n      }, \"End date: \", this.props.endDate.toDateString())), React.createElement(\"form\", {\n        onSubmit: e => this.handleSubmit(e),\n        noValidate: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 287\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 288\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 289\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 290\n        },\n        __self: this\n      }, \"First Name: \", React.createElement(\"input\", {\n        ref: \"fname\",\n        placeholder: \"Enter first name\",\n        type: \"text\",\n        onChange: e => this.handleFirstName(e.target.value),\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 290\n        },\n        __self: this\n      }), \" Last Name: \", React.createElement(\"input\", {\n        ref: \"lname\",\n        placeholder: \"Enter last name\",\n        type: \"text\",\n        onChange: e => this.handleLastName(e.target.value),\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 290\n        },\n        __self: this\n      })), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 291\n        },\n        __self: this\n      }, \"Email address: \", React.createElement(\"input\", {\n        ref: \"email\",\n        placeholder: \"Enter email address\",\n        type: \"email\",\n        onChange: e => this.handleEmail(e.target.value),\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 291\n        },\n        __self: this\n      })), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 292\n        },\n        __self: this\n      }, \"Phone number: \", React.createElement(\"input\", {\n        ref: \"phoneno\",\n        placeholder: \"Enter phone number\",\n        type: \"number\",\n        onChange: e => this.handlePhone(e.target.value),\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 292\n        },\n        __self: this\n      })), React.createElement(Webcam, {\n        height: 360,\n        width: 720,\n        screenshotFormat: \"image/jpeg\",\n        audio: false,\n        ref: this.webcamRef,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 294\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 301\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        type: \"button\",\n        onClick: this.handleCapture,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 302\n        },\n        __self: this\n      }, \"Capture photo\"), React.createElement(\"button\", {\n        type: \"button\",\n        onClick: this.handlePhotoUpload2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 303\n        },\n        __self: this\n      }, \"Upload photo\")), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 305\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: this.state.previewImg,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 306\n        },\n        __self: this\n      })), React.createElement(\"button\", {\n        className: \"btn-primary\",\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 308\n        },\n        __self: this\n      }, \"Finish booking\")))));\n    }\n  }\n\n}\nexport default BookingForm;","map":{"version":3,"sources":["/Users/aaronchongkh/ReactProjects/hotel-test2/src/components/BookingForm.tsx"],"names":["React","Redirect","AWS","Webcam","S3","require","config","bucketName","region","accessKeyId","secretAccessKey","update","s3Bucket","params","Bucket","dynamoDb","DynamoDB","DocumentClient","S3FileUpload","BookingForm","Component","constructor","props","webcamRef","handleCapture","e","preventDefault","console","log","tempPhoto","current","getScreenshot","setState","previewImg","handlePhotoUpload2","buffer","Buffer","from","state","replace","fnameString","fname","lnameString","lname","cusFullName","data","Key","Body","ContentEncoding","ContentType","putObject","err","handleSubmit","bind","handlePhotoUpload","createRef","startDate","Date","endDate","noOfPeople","roomType","email","phoneno","photoInput","bookingRedirect","componentDidMount","setTimeout","photoSelection","numOfSel","i","push","renderPhotoSelection","refs","value","endDateString","toDateString","split","slice","join","startDateString","emailString","phonenoString","roomTypeString","noOfPeopleString","defaultRoomNumber","TableName","Item","fName","lName","fullName","roomNumber","toString","put","window","alert","handleFirstName","handleLastName","handleEmail","handlePhone","file","target","files","reader","FileReader","length","onloadend","result","file_name","uploadFile","then","catch","error","abc","readAsDataURL","render"],"mappings":"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","sourcesContent":["import React, { Props } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Redirect } from 'react-router';\nimport { ReactComponent } from '*.svg';\nimport { IState } from '../models/models';\nimport Moment from 'react-moment';\nimport dynamo from 'dynamodb';\nimport AWS, { DynamoDB } from 'aws-sdk';\nimport Webcam, { WebcamProps } from 'react-webcam';\n// const AWS = require('aws-sdk');\nconst S3 = require('react-aws-s3');\n\ninterface LState {\n    startDate: Date;\n    endDate: Date;\n    noOfPeople: number;\n    roomType?: string;\n    fname?: string;\n    lname?: string;\n    email?: string;\n    phoneno?: string;\n}\n\nconst config = {\n    bucketName: 'facerecogdata2',\n    //dirName: 'media', /* optional */\n    region: 'us-east-2',\n    accessKeyId: 'AKIA2FBSYGBOR6A3TQGL',\n    secretAccessKey: 'myA5ldaLfSkcCwYKF6DiG4q5nG4lMkXmJCoyRKSp',\n    // s3Url: 'https:/your-custom-s3-url.com/', /* optional */\n}\n\n// AWS.config = new AWS.config();\n// AWS.config.accessKeyId = config.accessKeyId; \n// AWS.config.secretAccessKey = config.secretAccessKey;\n// AWS.config.region = config.region\n\n\nAWS.config.update({ accessKeyId: 'AKIA2FBSYGBOR6A3TQGL', secretAccessKey: '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', region: 'us-east-2' });\nvar s3Bucket = new AWS.S3({ params: { Bucket: 'facerecogdata2' } });\n\n\nconst dynamoDb = new AWS.DynamoDB.DocumentClient({ accessKeyId: config.accessKeyId, secretAccessKey: config.secretAccessKey, region: config.region });\n\n// dynamo.AWS.config.update({accessKeyId: config.accessKeyId, secretAccessKey: config.secretAccessKey, region: config.region});\n\nconst S3FileUpload = new S3(config);\n// const ddb = new AWS.DynamoDB({apiVersion: '2012-08-10'});\n\nexport class BookingForm extends React.Component<LState, IState> {\n    private webcamRef: React.RefObject<Webcam> & React.RefObject<HTMLVideoElement>;\n    constructor(props: Readonly<LState>) {\n        super(props);\n        this.handleSubmit = this.handleSubmit.bind(this)\n        this.handleCapture = this.handleCapture.bind(this)\n        this.handlePhotoUpload = this.handlePhotoUpload.bind(this)\n        this.webcamRef = React.createRef();\n\n        this.state = {\n            startDate: new Date(),\n            endDate: new Date(),\n            noOfPeople: 1,\n            roomType: \"\",\n            fname: \"\",\n            lname: \"\",\n            email: \"\",\n            phoneno: \"\",\n            previewImg: null,\n            photoInput: false,\n            bookingRedirect: false\n        }\n    }\n\n    componentDidMount() {\n        console.log(\"JHASJDKSAJDLK\")\n        setTimeout(() => {\n            // const { startDate, endDate, noOfPeople, roomType } = this.props.location.state;\n            // console.log(startDate);\n            // console.log(endDate);\n            // console.log(noOfPeople);\n            // console.log(roomType);\n\n            this.setState({\n                startDate: this.props.startDate,\n                endDate: this.props.endDate,\n                noOfPeople: this.props.noOfPeople,\n                roomType: this.props.roomType,\n                fname: this.props.fname,\n                lname: this.props.lname,\n                email: this.props.email,\n                phoneno: this.props.phoneno\n            })\n            console.log(this.state.noOfPeople);\n            console.log(this.state.roomType);\n            console.log(this.state.startDate);\n            console.log(this.state.endDate);\n        }, 1000)\n    }\n\n    public photoSelection() {\n        let numOfSel: Array<JSX.Element> = [];\n        for (let i = 1; i <= this.props.noOfPeople; i++) {\n            numOfSel.push(<div>Person number {i}:<input type=\"file\" name=\"file\" onChange={this.handlePhotoUpload} /></div>)\n        }\n        return numOfSel;\n    }\n\n    public renderPhotoSelection() {\n\n        return <div>\n            {this.photoSelection()}\n        </div>\n    }\n\n    handleCapture = (e) => {\n        e.preventDefault();\n        console.log(\"capture\")\n        var tempPhoto = this.webcamRef.current.getScreenshot();\n        this.setState({\n            previewImg: tempPhoto\n        });\n    }\n\n    handlePhotoUpload2 = (e) => {\n        e.preventDefault();\n        console.log(\"upload2\")\n        AWS.config.update({ accessKeyId: 'AKIA2FBSYGBOR6A3TQGL', secretAccessKey: 'myA5ldaLfSkcCwYKF6DiG4q5nG4lMkXmJCoyRKSp', region: 'us-east-2' });\n        const buffer = Buffer.from(this.state.previewImg.replace(/^data:image\\/\\w+;base64,/, \"\"), 'base64');\n        console.log(buffer);\n        var fnameString = this.state.fname;\n        var lnameString = this.state.lname;\n        var cusFullName = fnameString + \"_\" + lnameString;\n        var data = {\n            Key: cusFullName + \".jpeg\",\n            Body: buffer,\n            ContentEncoding: 'base64',\n            ContentType: 'image/jpeg',\n            Bucket: 'facerecogdata2'\n        };\n        s3Bucket.putObject(data, function (err, data) {\n            if (err) {\n                console.log(err);\n                console.log('Error uploading data: ', data);\n            } else {\n                console.log('succesfully uploaded the image!');\n            }\n        });\n    }\n\n    public handleSubmit(e: React.FormEvent<HTMLFormElement>) {\n        e.preventDefault();\n        this.setState({\n            fname: (this.refs.fname as HTMLInputElement).value,\n            lname: (this.refs.lname as HTMLInputElement).value,\n            email: (this.refs.email as HTMLInputElement).value,\n            phoneno: (this.refs.phoneno as HTMLInputElement).value\n        })\n        console.log(this.state.fname);\n\n        var fnameString = this.state.fname;\n        var lnameString = this.state.lname;\n        var cusFullName = fnameString + \"_\" + lnameString;\n        var endDateString = this.state.endDate.toDateString().split(' ').slice(1).join(' ');\n        var startDateString = this.state.startDate.toDateString().split(' ').slice(1).join(' ');\n        var emailString = this.state.email;\n        var phonenoString = this.state.phoneno;\n        var roomTypeString = this.state.roomType;\n        var noOfPeopleString = this.state.noOfPeople;\n\n        console.log(this.state);\n        console.log(cusFullName);\n\n        var defaultRoomNumber = 0;\n\n        var params = {\n            TableName: 'HotelCustomer',\n            Item: {\n                // 'fName': {\"S\": this.state.fname}, \n                // 'lName': {\"S\": this.state.lname}, \n                // 'startDate': {\"S\": this.state.startDate.toISOString()}, \n                // 'endDate': {\"S\": this.state.endDate.toISOString()}, \n                // 'roomType': {\"S\": this.state.roomType}, \n                // 'fullName': {\"S\": cusFullName}, \n                // 'email': {\"S\": this.state.email}, \n                // 'phoneno': {\"S\": this.state.phoneno},\n                // 'noOfPeople': {\"S\": this.state.noOfPeople}\n                fName: fnameString,\n                lName: lnameString,\n                email: emailString,\n                endDate: endDateString,\n                fullName: cusFullName,\n                phoneno: phonenoString,\n                roomType: roomTypeString,\n                startDate: startDateString,\n                noOfPeople: noOfPeopleString,\n                roomNumber: defaultRoomNumber.toString()\n            }\n        };\n\n        dynamoDb.put(params, (err, data) => {\n            if (err) {\n                console.log(\"Error\", err);\n                window.alert(\"Can't upload data, please try again. \")\n            } else {\n                console.log(\"Success\", data);\n                this.setState({\n                    bookingRedirect: true\n                })\n            }\n        });\n\n\n\n        // setTimeout(() => {\n        //     //bac\n        // }, 300)\n    }\n\n    public handleFirstName(e: string): void {\n        this.setState({\n            fname: e\n        })\n    }\n\n    public handleLastName(e: string): void {\n        this.setState({\n            lname: e\n        })\n    }\n\n    public handleEmail(e: string): void {\n        this.setState({\n            email: e\n        })\n    }\n\n    public handlePhone(e: string): void {\n        this.setState({\n            phoneno: e\n        })\n    }\n\n    public handlePhotoUpload(e: any): void {\n        var fnameString = this.state.fname;\n        var lnameString = this.state.lname;\n        var fullName = fnameString + \"_\" + lnameString;\n\n        let file = e.target.files[0];\n        let reader = new FileReader();\n\n        if (e.target.files.length === 0) {\n            return;\n        }\n\n        console.log(e.target.files[0]);\n        reader.onloadend = (e) => {\n            this.setState({\n                previewImg: [reader.result]\n            });\n        }\n        const file_name = fullName;\n\n        S3FileUpload.uploadFile(e.target.files[0], file_name).then((data: any) => console.log(data), window.alert(\"Uploaded\")).catch((err: any) => console.error(err));\n\n        const abc = reader.readAsDataURL(file);\n\n        this.setState({\n            photoInput: true\n        })\n    }\n\n    public render(): JSX.Element {\n        const bookingRedirect = this.state.bookingRedirect;\n        console.log(this.state);\n\n        if (bookingRedirect) {\n            return <Redirect to='/bookingcomplete' />\n        }\n        else {\n            return <div>\n                <div className=\"banner\">\n                    <h2>Room details: </h2>\n                    <p>Room type selected: {this.props.roomType}</p>\n                    <p>Start date: {this.props.startDate.toDateString()}</p>\n                    <p>End date: {this.props.endDate.toDateString()}</p>\n                </div>\n                <form onSubmit={(e) => this.handleSubmit(e)} noValidate={true}>\n                    <div className=\"container\">\n                        <div className=\"form-group\">\n                            <p>First Name: <input ref='fname' placeholder=\"Enter first name\" type=\"text\" onChange={e => this.handleFirstName(e.target.value)} required></input> Last Name: <input ref='lname' placeholder=\"Enter last name\" type=\"text\" onChange={e => this.handleLastName(e.target.value)} required></input></p>\n                            <p>Email address: <input ref='email' placeholder=\"Enter email address\" type=\"email\" onChange={e => this.handleEmail(e.target.value)} required></input></p>\n                            <p>Phone number: <input ref='phoneno' placeholder=\"Enter phone number\" type=\"number\" onChange={e => this.handlePhone(e.target.value)} required></input></p>\n                            {/* {this.renderPhotoSelection()} */}\n                            <Webcam\n                                height={360}\n                                width={720}\n                                screenshotFormat=\"image/jpeg\"\n                                audio={false}\n                                ref={this.webcamRef}\n                            />\n                            <div>\n                                <button type=\"button\" onClick={this.handleCapture}>Capture photo</button>\n                                <button type=\"button\" onClick={this.handlePhotoUpload2}>Upload photo</button>\n                            </div>\n                            <div>\n                                <img src={this.state.previewImg} />\n                            </div>\n                            <button className=\"btn-primary\" type=\"submit\">Finish booking</button>\n                        </div>\n                    </div>\n                </form>\n            </div>\n        }\n    }\n}\n\nexport default BookingForm;\n"]},"metadata":{},"sourceType":"module"}