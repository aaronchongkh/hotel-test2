{"ast":null,"code":"var _jsxFileName = \"/Users/aaronchongkh/ReactProjects/hotel-test2/src/components/BookingForm.tsx\";\nimport React from 'react';\nimport { Redirect } from 'react-router';\n\nconst S3 = require('react-aws-s3');\n\nimport dynamo from 'dynamodb';\nconst config = {\n  bucketName: 'facerecogdata2',\n  //dirName: 'media', /* optional */\n  region: 'us-east-2',\n  accessKeyId: 'AKIA2FBSYGBOR6A3TQGL',\n  secretAccessKey: 'myA5ldaLfSkcCwYKF6DiG4q5nG4lMkXmJCoyRKSp' // s3Url: 'https:/your-custom-s3-url.com/', /* optional */\n\n};\ndynamo.AWS.config.update({\n  accessKeyId: config.accessKeyId,\n  secretAccessKey: config.secretAccessKey,\n  region: config.region\n});\nconst S3FileUpload = new S3(config);\nexport class BookingForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.state = {\n      startDate: new Date(),\n      endDate: new Date(),\n      noOfPeople: 1,\n      roomType: \"\",\n      fname: \"\",\n      lname: \"\",\n      email: \"\",\n      phoneno: \"\",\n      previewImg: \"\",\n      photoInput: false,\n      bookingRedirect: false\n    };\n  }\n\n  componentDidMount() {\n    setTimeout(() => {\n      // const { startDate, endDate, noOfPeople, roomType } = this.props.location.state;\n      // console.log(startDate);\n      // console.log(endDate);\n      // console.log(noOfPeople);\n      // console.log(roomType);\n      this.setState({\n        startDate: this.props.startDate,\n        endDate: this.props.endDate,\n        noOfPeople: this.props.noOfPeople,\n        roomType: this.props.roomType,\n        fname: this.props.fname,\n        lname: this.props.lname,\n        email: this.props.email,\n        phoneno: this.props.phoneno\n      });\n      console.log(this.state.noOfPeople);\n      console.log(this.state.roomType);\n      console.log(this.state.startDate);\n      console.log(this.state.endDate);\n    }, 1000);\n  }\n\n  photoSelection() {\n    let numOfSel = [];\n\n    for (let i = 1; i <= this.props.noOfPeople; i++) {\n      numOfSel.push(React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, \"Person number \", i, \": \", React.createElement(\"button\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, \"Import picture\")));\n    }\n\n    return numOfSel;\n  }\n\n  renderPhotoSelection() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, this.photoSelection());\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    this.setState({\n      fname: this.refs.fname.value,\n      lname: this.refs.lname.value,\n      email: this.refs.email.value,\n      phoneno: this.refs.phoneno.value\n    });\n    console.log(this.state.fname);\n    this.setState({\n      bookingRedirect: true\n    });\n  }\n\n  handleFirstName(e) {\n    this.setState({\n      fname: e\n    });\n  }\n\n  handleLastName(e) {\n    this.setState({\n      lname: e\n    });\n  }\n\n  handlePhotoUpload(e) {\n    var fnameString = this.state.fname;\n    var lnameString = this.state.lname;\n    var fullName = fnameString + \"_\" + lnameString;\n    let file = e.target.files[0];\n    let reader = new FileReader();\n\n    if (e.target.files.length === 0) {\n      return;\n    }\n\n    console.log(e.target.files[0]);\n\n    reader.onloadend = e => {\n      this.setState({\n        previewImg: [reader.result]\n      });\n    };\n\n    const file_name = fullName;\n    S3FileUpload.uploadFile(e.target.files[0], file_name).then(data => console.log(data), window.alert(\"Uploaded\")).catch(err => console.error(err));\n    const abc = reader.readAsDataURL(file);\n    this.setState({\n      photoInput: true\n    });\n  }\n\n  render() {\n    const bookingRedirect = this.state.bookingRedirect;\n    console.log(this.state);\n\n    if (bookingRedirect) {\n      return React.createElement(Redirect, {\n        to: \"/bookingcomplete\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      });\n    } else {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"banner\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }, \"Room details: \"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }, \"Room type selected: \", this.props.roomType), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }, \"Start date: \", this.props.startDate.toDateString()), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, \"End date: \", this.props.endDate.toDateString())), React.createElement(\"form\", {\n        onSubmit: e => this.handleSubmit(e),\n        noValidate: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }, \"First Name: \", React.createElement(\"input\", {\n        ref: \"fname\",\n        placeholder: \"Enter first name\",\n        type: \"text\",\n        onChange: e => this.handleFirstName(e.target.value),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }), \" Last Name: \", React.createElement(\"input\", {\n        ref: \"lname\",\n        placeholder: \"Enter last name\",\n        type: \"text\",\n        onChange: e => this.handleLastName(e.target.value),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      })), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }, \"Email address: \", React.createElement(\"input\", {\n        ref: \"email\",\n        placeholder: \"Enter email address\",\n        type: \"email\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      })), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }, \"Phone number: \", React.createElement(\"input\", {\n        ref: \"phoneno\",\n        placeholder: \"Enter phone number\",\n        type: \"number\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      })), this.renderPhotoSelection(), React.createElement(\"button\", {\n        className: \"btn-primary\",\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }, \"Finish booking\")))));\n    }\n  }\n\n}\nexport default BookingForm;","map":{"version":3,"sources":["/Users/aaronchongkh/ReactProjects/hotel-test2/src/components/BookingForm.tsx"],"names":["React","Redirect","S3","require","dynamo","config","bucketName","region","accessKeyId","secretAccessKey","AWS","update","S3FileUpload","BookingForm","Component","constructor","props","handleSubmit","bind","state","startDate","Date","endDate","noOfPeople","roomType","fname","lname","email","phoneno","previewImg","photoInput","bookingRedirect","componentDidMount","setTimeout","setState","console","log","photoSelection","numOfSel","i","push","renderPhotoSelection","e","preventDefault","refs","value","handleFirstName","handleLastName","handlePhotoUpload","fnameString","lnameString","fullName","file","target","files","reader","FileReader","length","onloadend","result","file_name","uploadFile","then","data","window","alert","catch","err","error","abc","readAsDataURL","render","toDateString"],"mappings":"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","sourcesContent":["import React, { Props } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Redirect } from 'react-router';\nimport { ReactComponent } from '*.svg';\nimport { IState } from '../models/models';\nimport Moment from 'react-moment';\nconst S3 = require('react-aws-s3');\nimport dynamo from 'dynamodb';\n\ninterface LState {\n    startDate: Date;\n    endDate: Date;\n    noOfPeople: number;\n    roomType?: string;\n    fname?: string; \n    lname?: string; \n    email?: string; \n    phoneno?: string; \n}\n\nconst config = {\n    bucketName: 'facerecogdata2',\n    //dirName: 'media', /* optional */\n    region: 'us-east-2',\n    accessKeyId: 'AKIA2FBSYGBOR6A3TQGL',\n    secretAccessKey: 'myA5ldaLfSkcCwYKF6DiG4q5nG4lMkXmJCoyRKSp',\n    // s3Url: 'https:/your-custom-s3-url.com/', /* optional */\n}\n\ndynamo.AWS.config.update({accessKeyId: config.accessKeyId, secretAccessKey: config.secretAccessKey, region: config.region});\n\nconst S3FileUpload = new S3(config);\n\nexport class BookingForm extends React.Component<LState, IState> {\n    constructor(props: Readonly<LState>) {\n        super(props);\n        this.handleSubmit = this.handleSubmit.bind(this)\n\n        this.state = {\n            startDate: new Date(), \n            endDate: new Date(),\n            noOfPeople: 1, \n            roomType: \"\",\n            fname: \"\",\n            lname: \"\", \n            email: \"\", \n            phoneno: \"\", \n            previewImg: \"\", \n            photoInput: false,\n            bookingRedirect: false\n        }\n    }\n\n    componentDidMount() {\n        setTimeout(() => {\n            // const { startDate, endDate, noOfPeople, roomType } = this.props.location.state;\n            // console.log(startDate);\n            // console.log(endDate);\n            // console.log(noOfPeople);\n            // console.log(roomType);\n\n        this.setState({\n            startDate: this.props.startDate,\n            endDate: this.props.endDate,\n            noOfPeople: this.props.noOfPeople,\n            roomType: this.props.roomType,\n            fname: this.props.fname,\n            lname: this.props.lname,\n            email: this.props.email,\n            phoneno: this.props.phoneno\n        })\n        console.log(this.state.noOfPeople);\n        console.log(this.state.roomType);\n        console.log(this.state.startDate);\n        console.log(this.state.endDate);\n        }, 1000)\n    }\n\n    public photoSelection() {\n        let numOfSel: Array<JSX.Element> = [];\n        for(let i = 1; i <= this.props.noOfPeople; i++) {\n            numOfSel.push(<div>Person number {i}: <button>Import picture</button></div>)\n        }\n        return numOfSel;\n    }\n\n    public renderPhotoSelection() {\n        \n        return <div>\n            {this.photoSelection()}\n        </div>\n    }\n\n    public handleSubmit(e: React.FormEvent<HTMLFormElement>) {\n        e.preventDefault();\n        this.setState({\n            fname: (this.refs.fname as HTMLInputElement).value, \n            lname: (this.refs.lname as HTMLInputElement).value,\n            email: (this.refs.email as HTMLInputElement).value, \n            phoneno: (this.refs.phoneno as HTMLInputElement).value\n        })\n        console.log(this.state.fname);\n\n        this.setState({\n            bookingRedirect: true\n        })\n    }\n\n    public handleFirstName(e: string): void {\n        this.setState({\n            fname: e\n        })\n    }\n\n    public handleLastName(e: string): void {\n        this.setState({\n            lname: e\n        })\n    }\n\n    public handlePhotoUpload(e: any): void {\n        var fnameString = this.state.fname; \n        var lnameString = this.state.lname; \n        var fullName = fnameString + \"_\" + lnameString; \n\n        let file = e.target.files[0];\n        let reader = new FileReader();\n\n        if (e.target.files.length === 0) {\n            return;\n        }\n\n        console.log(e.target.files[0]);\n        reader.onloadend = (e) => {\n            this.setState({\n                previewImg: [reader.result]\n            });\n        }\n        const file_name = fullName;\n\n        S3FileUpload.uploadFile(e.target.files[0], file_name).then((data: any) => console.log(data), window.alert(\"Uploaded\")).catch((err: any) => console.error(err));\n\n        const abc = reader.readAsDataURL(file);\n\n        this.setState({\n            photoInput: true\n        })\n    }\n\n    public render(): JSX.Element {\n        const bookingRedirect = this.state.bookingRedirect;\n        console.log(this.state);\n        \n        if (bookingRedirect) {\n            return <Redirect to='/bookingcomplete' />\n        }\n        else {\n            return <div>\n            <div className=\"banner\">\n                <h2>Room details: </h2>\n                <p>Room type selected: {this.props.roomType}</p>\n                <p>Start date: {this.props.startDate.toDateString()}</p>\n                <p>End date: {this.props.endDate.toDateString()}</p>\n            </div>\n            <form onSubmit={(e) => this.handleSubmit(e)} noValidate={true}>\n            <div className=\"container\">\n                <div className=\"form-group\">\n                    <p>First Name: <input ref='fname' placeholder= \"Enter first name\" type=\"text\" onChange={e => this.handleFirstName(e.target.value)}></input> Last Name: <input ref='lname' placeholder= \"Enter last name\" type=\"text\" onChange={e => this.handleLastName(e.target.value)}></input></p>\n                    <p>Email address: <input ref='email' placeholder=\"Enter email address\" type=\"email\"></input></p>\n                    <p>Phone number: <input ref='phoneno' placeholder=\"Enter phone number\" type=\"number\"></input></p>\n                    {this.renderPhotoSelection()}\n                    <button className=\"btn-primary\" type=\"submit\">Finish booking</button>\n                </div>\n            </div>\n            </form>\n            </div>\n        }\n    }\n}\n\nexport default BookingForm;\n"]},"metadata":{},"sourceType":"module"}