{"ast":null,"code":"'use strict';\n\nvar Scan = require('./scan'),\n    async = require('async'),\n    NodeUtil = require('util'),\n    utils = require('./utils'),\n    Readable = require('stream').Readable,\n    _ = require('lodash');\n\nvar ParallelScan = module.exports = function (table, serializer, totalSegments) {\n  Scan.call(this, table, serializer);\n  this.totalSegments = totalSegments;\n};\n\nNodeUtil.inherits(ParallelScan, Scan);\n\nParallelScan.prototype.exec = function (callback) {\n  var self = this;\n  var streamMode = false;\n  var combinedStream = utils.promisifyStream(new Readable({\n    objectMode: true\n  }));\n\n  if (!callback) {\n    streamMode = true;\n\n    callback = function (err) {\n      if (err) {\n        combinedStream.emit('error', err);\n      }\n    };\n  }\n\n  var scanFuncs = [];\n\n  _.times(self.totalSegments, function (segment) {\n    var scn = new Scan(self.table, self.serializer);\n    scn.request = _.cloneDeep(self.request);\n    scn = scn.segments(segment, self.totalSegments).loadAll();\n\n    var scanFunc = function (callback) {\n      if (streamMode) {\n        var stream = scn.exec();\n        stream.on('error', callback);\n        stream.on('readable', function () {\n          var data = stream.read();\n\n          if (data) {\n            combinedStream.push(data);\n          }\n        });\n        stream.on('end', callback);\n      } else {\n        return scn.exec(callback);\n      }\n    };\n\n    scanFuncs.push(scanFunc);\n  });\n\n  var started = false;\n\n  var startScans = function () {\n    if (started) {\n      return;\n    }\n\n    started = true;\n    async.parallel(scanFuncs, function (err, responses) {\n      if (err) {\n        return callback(err);\n      }\n\n      combinedStream.push(null);\n      return callback(null, utils.mergeResults(responses, self.table.tableName()));\n    });\n  };\n\n  if (streamMode) {\n    combinedStream._read = startScans;\n  } else {\n    startScans();\n  }\n\n  return combinedStream;\n};","map":null,"metadata":{},"sourceType":"script"}