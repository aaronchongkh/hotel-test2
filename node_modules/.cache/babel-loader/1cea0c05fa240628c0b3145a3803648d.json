{"ast":null,"code":"import 'react-dropdown/style.css'; // import S3FileUpload from 'aws-s3';\n// import AWS from 'aws-sdk';\n// const S3FileUpload = require('react-s3');\n\nimport AWS from 'aws-sdk';\nimport { CameraMode, Defaults } from '../models/types.js';\n\nconst S3 = require('react-aws-s3');\n\nconst config = {\n  bucketName: 'facerecogdata2',\n  //dirName: 'media', /* optional */\n  region: 'us-east-2',\n  accessKeyId: 'AKIA2FBSYGBOR6A3TQGL',\n  secretAccessKey: 'myA5ldaLfSkcCwYKF6DiG4q5nG4lMkXmJCoyRKSp' // s3Url: 'https:/your-custom-s3-url.com/', /* optional */\n\n};\nAWS.config.update({\n  accessKeyId: 'AKIA2FBSYGBOR6A3TQGL',\n  secretAccessKey: 'myA5ldaLfSkcCwYKF6DiG4q5nG4lMkXmJCoyRKSp',\n  region: 'us-east-2'\n});\nconst dynamoDb = new AWS.DynamoDB.DocumentClient({\n  accessKeyId: config.accessKeyId,\n  secretAccessKey: config.secretAccessKey,\n  region: config.region\n});\nconst S3FileUpload = new S3(config);\n\nclass PhotoBooth {\n  static init() {\n    PhotoBooth.buttons.take_photo = document.querySelector(\"button[name='take_photo']\");\n    PhotoBooth.buttons.switch_cam = document.querySelector(\"button[name='switch_cam']\");\n\n    PhotoBooth.buttons.take_photo.onclick = () => {\n      PhotoBooth.take_photo();\n    };\n\n    PhotoBooth.buttons.switch_cam.onclick = () => {\n      PhotoBooth.switch_cam();\n    };\n\n    navigator.mediaDevices.enumerateDevices().then(PhotoBooth.on_enumerate_devices).catch(PhotoBooth.on_error);\n  }\n\n  static on_enumerate_devices(devices) {\n    if (devices.length < 1) {\n      PhotoBooth.buttons.take_photo.disabled = true;\n    }\n\n    if (devices.length < 2) {\n      PhotoBooth.buttons.switch_cam.disabled = true;\n    }\n\n    return PhotoBooth.init_camera();\n  }\n\n  static init_camera() {\n    return PhotoBooth.get_media().then(PhotoBooth.on_get_media).catch(PhotoBooth.on_error);\n  }\n\n  static get_media() {\n    let constraints = {\n      audio: false,\n      video: {\n        facingMode: PhotoBooth.mode\n      }\n    };\n    return navigator.mediaDevices.getUserMedia(constraints);\n  }\n\n  static take_photo() {\n    let context = PhotoBooth.canvas.getContext('2d');\n    context.drawImage(PhotoBooth.video, 0, 0, PhotoBooth.canvas.width, PhotoBooth.canvas.height);\n    let url = PhotoBooth.canvas.toDataURL('image/jpeg');\n    let a = document.createElement('a');\n    a.href = url;\n    a.target = '_blank';\n    a.download = 'photo.jpeg';\n    a.click();\n  }\n\n  static switch_cam() {\n    PhotoBooth.mode = PhotoBooth.mode == CameraMode.User ? CameraMode.Environment : CameraMode.User;\n    PhotoBooth.init_camera();\n  }\n\n}\n\nPhotoBooth.mode = CameraMode.Environment;\nPhotoBooth.buttons = {\n  take_photo: null,\n  switch_cam: null\n};\nPhotoBooth.canvas = void 0;\nPhotoBooth.video = void 0;\n\nPhotoBooth.on_get_media = stream => {\n  PhotoBooth.canvas = document.createElement('canvas');\n  PhotoBooth.video = document.querySelector('video');\n\n  PhotoBooth.video.onloadedmetadata = () => {\n    PhotoBooth.video.play();\n  };\n\n  PhotoBooth.video.oncanplay = () => {\n    PhotoBooth.on_video_ready();\n  };\n\n  PhotoBooth.video.srcObject = stream;\n};\n\nPhotoBooth.on_video_ready = () => {\n  PhotoBooth.canvas.width = Defaults.width;\n  PhotoBooth.canvas.height = PhotoBooth.video.videoHeight / (PhotoBooth.video.videoWidth / Defaults.width);\n  PhotoBooth.video.setAttribute('height', PhotoBooth.canvas.height.toString());\n  PhotoBooth.video.setAttribute('width', PhotoBooth.canvas.width.toString());\n};\n\nPhotoBooth.on_error = reason => {\n  console.log(reason);\n};\n\nPhotoBooth.init();","map":{"version":3,"sources":["/Users/aaronchongkh/ReactProjects/hotel-test2/src/pages/Photobooth.tsx"],"names":["AWS","CameraMode","Defaults","S3","require","config","bucketName","region","accessKeyId","secretAccessKey","update","dynamoDb","DynamoDB","DocumentClient","S3FileUpload","PhotoBooth","init","buttons","take_photo","document","querySelector","switch_cam","onclick","navigator","mediaDevices","enumerateDevices","then","on_enumerate_devices","catch","on_error","devices","length","disabled","init_camera","get_media","on_get_media","constraints","audio","video","facingMode","mode","getUserMedia","context","canvas","getContext","drawImage","width","height","url","toDataURL","a","createElement","href","target","download","click","User","Environment","stream","onloadedmetadata","play","oncanplay","on_video_ready","srcObject","videoHeight","videoWidth","setAttribute","toString","reason","console","log"],"mappings":"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","sourcesContent":["import React from 'react';\nimport DatePicker from 'react-datepicker';\nimport Dropdown from 'react-dropdown';\nimport 'react-dropdown/style.css'\n// import S3FileUpload from 'aws-s3';\n// import AWS from 'aws-sdk';\n// const S3FileUpload = require('react-s3');\nimport AWS, { DynamoDB } from 'aws-sdk';\nimport { CameraMode, IButtons, Defaults } from '../models/types.js'\nconst S3 = require('react-aws-s3');\n\ninterface IState {\n    startDate: Date;\n    endDate: Date;\n    roomType: string;\n    previewImg?: any;\n    success: boolean; \n    url: string;\n    photoInput: boolean;\n    test: string;\n    tries: number;\n}\n\n\nconst config = {\n    bucketName: 'facerecogdata2',\n    //dirName: 'media', /* optional */\n    region: 'us-east-2',\n    accessKeyId: 'AKIA2FBSYGBOR6A3TQGL',\n    secretAccessKey: 'myA5ldaLfSkcCwYKF6DiG4q5nG4lMkXmJCoyRKSp',\n    // s3Url: 'https:/your-custom-s3-url.com/', /* optional */\n}\nAWS.config.update({accessKeyId: 'AKIA2FBSYGBOR6A3TQGL', secretAccessKey: 'myA5ldaLfSkcCwYKF6DiG4q5nG4lMkXmJCoyRKSp', region: 'us-east-2'});\nconst dynamoDb = new AWS.DynamoDB.DocumentClient({accessKeyId: config.accessKeyId, secretAccessKey: config.secretAccessKey, region: config.region});\n\nconst S3FileUpload = new S3(config);\n\nabstract class PhotoBooth {\n\n\tstatic mode: CameraMode = CameraMode.Environment\n\t\n\tstatic buttons: IButtons = { take_photo: null, switch_cam: null }\n\n\tstatic canvas: HTMLCanvasElement\n\t\n\tstatic video: HTMLVideoElement\n\n\tstatic init() {\n\n\t\tPhotoBooth.buttons.take_photo = document.querySelector(\"button[name='take_photo']\")\n\t\tPhotoBooth.buttons.switch_cam = document.querySelector(\"button[name='switch_cam']\")\n\n\t\tPhotoBooth.buttons.take_photo.onclick = () => { PhotoBooth.take_photo() }\n\t\tPhotoBooth.buttons.switch_cam.onclick = () => { PhotoBooth.switch_cam() }\n\n\t\tnavigator.mediaDevices.enumerateDevices()\n\t\t\t.then(PhotoBooth.on_enumerate_devices)\n\t\t\t.catch(PhotoBooth.on_error)\n\t}\n\n\tstatic on_enumerate_devices(devices: MediaDeviceInfo[]): Promise<void> {\n\n\t\tif (devices.length < 1) { PhotoBooth.buttons.take_photo.disabled = true }\n\t\tif (devices.length < 2) { PhotoBooth.buttons.switch_cam.disabled = true }\n\t\treturn PhotoBooth.init_camera()\n\t}\n\n\tstatic init_camera(): Promise<void> {\n\n\t\treturn PhotoBooth.get_media()\n\t\t\t.then(PhotoBooth.on_get_media)\n\t\t\t.catch(PhotoBooth.on_error)\n\t}\n\n\tstatic get_media(): Promise<MediaStream> {\n\n\t\tlet constraints = { audio: false, video: { facingMode: PhotoBooth.mode } }  \n\t\treturn navigator.mediaDevices.getUserMedia(constraints)\n\t}\n\n\tstatic on_get_media = (stream: MediaStream) => {\n\n\t\tPhotoBooth.canvas = document.createElement('canvas')\n\t\n\t\tPhotoBooth.video = document.querySelector('video')\n\t\tPhotoBooth.video.onloadedmetadata = () => { PhotoBooth.video.play() }\n\t\tPhotoBooth.video.oncanplay = () => { PhotoBooth.on_video_ready() }\n\t\tPhotoBooth.video.srcObject = stream\n\t}\n\n\tstatic on_video_ready = () => {\n\n\t\tPhotoBooth.canvas.width = Defaults.width\n\t\tPhotoBooth.canvas.height = PhotoBooth.video.videoHeight / (PhotoBooth.video.videoWidth / Defaults.width)\n\t  \n\t\tPhotoBooth.video.setAttribute('height', PhotoBooth.canvas.height.toString())\n\t\tPhotoBooth.video.setAttribute('width', PhotoBooth.canvas.width.toString())\n\t}\n\n\tstatic on_error = (reason: any) => { console.log(reason) }\n\n\tstatic take_photo() {\n\t\t\n\t\tlet context = PhotoBooth.canvas.getContext('2d')\n\t\tcontext.drawImage(PhotoBooth.video, 0, 0, PhotoBooth.canvas.width, PhotoBooth.canvas.height)\n\t\t\n\t\tlet url = PhotoBooth.canvas.toDataURL('image/jpeg')\n\t\tlet a = document.createElement('a')\n        \n        a.href = url\n        a.target = '_blank'\n        a.download = 'photo.jpeg'\n        a.click()\n\t}\n\n\tstatic switch_cam() {\n\n\t\tPhotoBooth.mode = (PhotoBooth.mode == CameraMode.User) ? CameraMode.Environment : CameraMode.User\n\t\tPhotoBooth.init_camera()\n\t}\n}\n\nPhotoBooth.init()"]},"metadata":{},"sourceType":"module"}